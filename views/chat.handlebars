
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chat Rooms</title>
    <script src="https://cdn.socket.io/socket.io-3.0.1.min.js"></script>
    <link rel="stylesheet" href="./style.css">
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f0f8ff;
            color: #333;
            margin: 0;
            padding: 20px;
        }
        h1 {
            text-align: center;
            color: #004080;
        }
        .chat-room {
            background-color: #ffffff;
            border: 2px solid #004080;
            border-radius: 8px;
            margin: 20px auto;
            padding: 20px;
            max-width: 400px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }
        .chat-room h2 {
            color: #004080;
            margin: 0 0 10px;
        }
        .join-button {
            display: block;
            background-color: #004080;
            color: #ffffff;
            text-align: center;
            padding: 10px;
            border: none;
            border-radius: 5px;
            text-decoration: none;
            font-size: 16px;
        }
        .join-button:hover {
            background-color: #003366;
        }

        .rooms{
            display: none;
        }
    </style>
</head>
<body>
<div class="pick-room">
    <h1>Chat Rooms</h1>
    <div class="chat-room">
        <h2>General Chat</h2>
        <p>Join the conversation on various topics!</p>
        <button type="button" class="join-button"  id="General Chat" onclick="joinRoom(this.getAttribute('id'))">Join Room</button>
    </div>
    <div class="chat-room">
        <h2>Tech Talk</h2>
        <p>Discuss the latest in technology and gadgets!</p>
        <button type="button" class="join-button" id="Tech Talk" onclick="joinRoom(this.getAttribute('id'))">Join Room</button>
    </div>
    <div class="chat-room">
        <h2>Book Club</h2>
        <p>Share and discuss your favorite books!</p>
        <button type="button" class="join-button" id="Book Club" onclick="joinRoom(this.getAttribute('id'))">Join Room</button>
    </div>
    </div>
    <div class="rooms">
   <div class="chat-container">
        <div class="chat-header">
            <h1 id="room-name">Chat Room</h1>
            <h5 id="users"></h5>
            <h3 id="joined"></h3>

        <button id="exitBtn" type="button" onclick="leaveRoom()">Leave</button>
            
        </div>
        <div class="chat-box" id="chat-box">
            
        </div>
        <div class="input-area">
            <input type="text" placeholder="Type your message..." id="message-input">
            <button id="sendBtn" type="button" >Send</button>
        </div>
    </div>


    </div>
    <script>

        const socket= io("http://localhost:3000");

       socket.on("connection",()=>{

        });

    
    const pickRooms= document.querySelector(".pick-room");
    const rooms= document.querySelector(".rooms");
    const roomName=document.querySelector("#room-name");
    const exitBtn= document.querySelector("#exitBtn");
  let room="";

function leaveRoom(){

        rooms.style.display="none";
              pickRooms.style.display="block";
              socket.emit("leaveRoom",room);


    }
    



   function joinRoom(id){
   
   room=id;
socket.emit("joinRoom",room);
rooms.style.display="block";
pickRooms.style.display="none";
roomName.innerText= `Welcome to ${id}`;


}
 
 
    socket.on("userCount",(data)=>{

document.querySelector("#users").innerText=`${data.roomUsers} online`;

document.querySelector("#joined").innerText=data.message;


   });
   
   /*
let messages= document.querySelector("#chat-box");
let text= document.querySelector("#message-input");

const sendBtn= document.querySelector("#sendBtn");

sendBtn.addEventListener("click", ()=>{
let message=text.value;
let sent= document.createElement("div");
sent.innerText=message;
messages.appendChild(sent);
sent.className="message sent";
socket.emit("message", message);

//sendBtn.style.background="red";
});

*/



socket.on("disconnect", (reason)=>{

if(reason==="io client disconnect"){

socket.disconnect();
}

else{
socket.connect();

}

});



/*  
socket.on("joined",(data)=>{
let announcement= document.createElement("p");
announcement.innerText=data+" has entered the room.";
messages.appendChild(announcement);

});

socket.on("disconnected", (data)=>{

let departure= document.createElement("p");
departure.innerText=data+" has left the room.";
messages.appendChild(departure);
});



socket.on("message", (data)=>{

let receivedMessage=document.createElement("div");
receivedMessage.className="message received";
receivedMessage.innerText=data;
messages.appendChild(receivedMessage);
});**/



</script>
</body>
